// <auto-generated />
using DeadLinerWebApp.DAL.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeadLinerWebApp.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210317204950_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeadLinerWebApp.DAL.Models.Hub", b =>
                {
                    b.Property<int>("HubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HubId");

                    b.ToTable("Hubs");

                    b.HasData(
                        new
                        {
                            HubId = 1,
                            Code = "testCodeHub",
                            Name = "testNameHub"
                        });
                });

            modelBuilder.Entity("DeadLinerWebApp.DAL.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Title = "mentee"
                        },
                        new
                        {
                            RoleId = 2,
                            Title = "mentor"
                        });
                });

            modelBuilder.Entity("DeadLinerWebApp.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "testEmail@lnu.edu.ua",
                            FullName = "TestFullName1"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "Serhii.Yurko@lnu.edu.ua",
                            FullName = "Serhii Yurko"
                        });
                });

            modelBuilder.Entity("DeadLinerWebApp.DAL.Models.UsersHubs", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("HubId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersHubsId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "HubId");

                    b.HasIndex("HubId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersHubs");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            HubId = 1,
                            RoleId = 1,
                            TeamName = "testTeam1",
                            UsersHubsId = 1
                        },
                        new
                        {
                            UserId = 2,
                            HubId = 1,
                            RoleId = 1,
                            TeamName = "testTeam1",
                            UsersHubsId = 2
                        });
                });

            modelBuilder.Entity("DeadLinerWebApp.DAL.Models.UsersHubs", b =>
                {
                    b.HasOne("DeadLinerWebApp.DAL.Models.Hub", "Hub")
                        .WithMany("UsersHubs")
                        .HasForeignKey("HubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeadLinerWebApp.DAL.Models.Role", "Role")
                        .WithMany("UsersHubs")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeadLinerWebApp.DAL.Models.User", "User")
                        .WithMany("UsersHubs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hub");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DeadLinerWebApp.DAL.Models.Hub", b =>
                {
                    b.Navigation("UsersHubs");
                });

            modelBuilder.Entity("DeadLinerWebApp.DAL.Models.Role", b =>
                {
                    b.Navigation("UsersHubs");
                });

            modelBuilder.Entity("DeadLinerWebApp.DAL.Models.User", b =>
                {
                    b.Navigation("UsersHubs");
                });
#pragma warning restore 612, 618
        }
    }
}
